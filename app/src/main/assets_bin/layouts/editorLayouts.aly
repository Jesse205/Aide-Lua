{--各种编辑器，编辑器的id将被赋予成局部变量
  NoneView={
    layout={LinearLayoutCompat},
    action={
      undo=nil,
      redo=nil,
      format=nil,
      search=nil,
    },
  },

  LuaEditor={--Lua编辑器
    layout={
      FrameLayout;
      layout_height="fill";
      layout_width="fill";
      layoutTransition=newLayoutTransition();
      id="editorParent";
      {
        ProgressBar;--进度条
        id="progressBar";
        layout_gravity="center";
      };
      {
        EditText;--手写编辑框
        layout_width="fill";
        layout_height="fill";
        id="pencilEdit";
        gravity="top|left";
        text=" ";
        textSize=0;
      };
      {
        MyLuaEditor;--Lua编辑器
        layout_height="fill";
        id="editor";
        layout_width="fill";
        focusable=true;
        textHighlightColor=0x99616161;
        keywordColor=0xff3f51b5;
        stringColor=0xffc2185b;
        commentColor=0xff9e9e9e;
        basewordColor=theme.color.Blue;
        userwordColor=0xff5c6bc0;
        textSize=math.dp2int(14);
      };
    },
    init=function(ids)

    end,
    action={
      undo="default",
      redo="default",
      format="default",
      search="default",
      commented=function(ids)
        local editor=ids.editor
        local selectedText=editor.getSelectedText()
        if #selectedText~=0 then
          if NowFileType=="lua" or NowFileType=="aly" then--Lua类型
            if selectedText:find("\n") then
              local equals=""
              while selectedText:find("]"..equals.."]") do
                equals=equals.."="
              end
              editor.paste("--["..equals.."["..selectedText.."]"..equals.."]")
             else
              editor.paste("--"..selectedText.."")
            end
           else
            showSnackBar(R.string.file_not_supported)
          end
        end
      end,
    },
  },
  CodeEditor={
    layout={
      LinearLayoutCompat;
      layout_height="fill";
      layout_width="fill";
      layoutTransition=newLayoutTransition();
      id="editorParent";
      {
        MyCodeEditor;
        layout_height="fill";
        id="editor";
        layout_width="fill";
        focusable=true;
        nonPrintablePaintingFlags=CodeEditor.FLAG_DRAW_WHITESPACE_LEADING;
        textSize=14;
        overScrollEnabled=false;
      };
    },
    action={
      undo="default",
      redo="default",
      format=function(ids)end,
      search={
        start=function(ids)
          ids.editor.mStartedActionMode=1
        end,
        search=function(ids,text,gotoNext)
          local editor=ids.editor
          editor.getSearcher().search(tostring(text))
          if gotoNext then
            editor.getSearcher().gotoNext()
          end
        end,
        finish=function(editorGroupViews)
          local editor=editorGroupViews.editor
          editor.mStartedActionMode=0
          editor.getSearcher().stopSearch()
        end
      },
    },
  },
  PhotoView={
    layout={
      LinearLayoutCompat;
      layout_height="fill";
      layout_width="fill";
      layoutTransition=newLayoutTransition();
      id="editorParent";
      visibility=View.GONE;
      {
        PhotoView;
        layout_height="fill";
        id="editor";
        layout_width="fill";
        padding="32dp";
      };
    },
    action={
      undo=nil,
      redo=nil,
      format=nil,
      search=nil,
    },
  }
}